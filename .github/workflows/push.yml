name: docker ci
on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: test
      run: |
        cp .env.sample .env
        docker compose up -d mariadb
        docker compose run --rm --entrypoint='npm test' backend
      shell: bash

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: deploy via ssh
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          cd ~

          test -d simple-contact-mgmt || {
            git clone git@github.com:elhardoum/simple-contact-mgmt.git simple-contact-mgmt
            cp simple-contact-mgmt/.env{.sample,}
          }

          cd simple-contact-mgmt

          # fetch updates
          git pull origin main

          # fallback to docker-compose if compose command isn't available (e.g. on alpine linux)
          docker compose >/dev/null && dcompose='docker compose' || dcompose='docker-compose'

          # build and reboot containers
          $dcompose build # --no-cache
          $dcompose up -d --force-recreate --renew-anon-volumes
